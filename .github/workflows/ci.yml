# .github/workflows/ci.yml
name: CI

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SECRETS_BLOB: ${{ secrets.SECRETS_BLOB }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Debug & Rehydrate secrets
        run: |
          echo "👉 Secret blob length: $(printf '%s' "$SECRETS_BLOB" | wc -c) bytes"
          
          # Decode into a temp file
          printf '%s' "$SECRETS_BLOB" \
            | tr -d '\r\n' \
            | base64 -d > decoded.env

          # Inspect
          echo "🔍 decoded.env (first 10 lines):"
          head -n 10 decoded.env | nl
          echo "🔍 Total lines in decoded.env: $(wc -l < decoded.env)"

          # Filter only key=value lines into .env
          grep '=' decoded.env > .env
          echo "✅ .env after filtering:"
          nl .env

          # Export & source
          set -a
          source .env
          set +a

      - name: Run & record Cypress tests
        uses: cypress-io/github-action@v6
        with:
          build: bun run build:no-tests
          start: bun run start
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 60
          record: true

  deploy:
    needs: test
    if: success()
    runs-on: ubuntu-latest
    env:
      SECRETS_BLOB: ${{ secrets.SECRETS_BLOB }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Debug & Rehydrate secrets
        run: |
          echo "👉 Secret blob length: $(printf '%s' "$SECRETS_BLOB" | wc -c) bytes"
          printf '%s' "$SECRETS_BLOB" | tr -d '\r\n' | base64 -d > decoded.env
          echo "🔍 decoded.env (first 10 lines):"
          head -n 10 decoded.env | nl
          echo "🔍 Total lines in decoded.env: $(wc -l < decoded.env)"
          grep '=' decoded.env > .env
          echo "✅ .env after filtering:"
          nl .env
          set -a; source .env; set +a

      - name: Deploy to Vercel
        run: |
          npm install -g vercel
          vercel --prod --confirm
